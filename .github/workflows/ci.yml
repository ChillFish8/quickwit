on:
  pull_request:
  push:
    branches:
      - main
      - run-ci-workflow
    paths:
      - "Cargo.lock"
      - "Cargo.toml"
      - "quickwit-*/**"

name: CI

env:
  AWS_DEFAULT_REGION  : "localhost"
  AWS_ACCESS_KEY_ID   : "placeholder"
  AWS_SECRET_ACCESS_KEY: "placeholder"
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1

jobs:
  ci-passes:
    name: CI passes
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - run: exit 0

  lint:
    name: Lint (fmt, dependency check, clippy)
    runs-on: ubuntu-latest
    container: public.ecr.aws/l6o9a3f9/quickwit-builder:latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/git
            ~/.cargo/registry
            target
          key: ${{ runner.os }}-cargo-lint-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-lint-${{ hashFiles('Cargo.lock') }}
            ${{ runner.os }}-cargo-lint
      - name: rustfmt
        run: cargo +nightly fmt --all -- --check
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace --tests
      - uses: actions-rs/cargo@v1
        name: cargo deny
        with:
          command: deny
          args: check Licenses # check that all of deps have an ok license.
  test:
    name: Run unit tests (no [ignored])
    runs-on: ubuntu-latest
    container: public.ecr.aws/l6o9a3f9/quickwit-builder:latest

    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - "4566:4566"
          - "4571:4571"
          - "8080:8080"
        env:
          SERVICES: kinesis,s3
        options: >-
          --health-cmd "curl -k https://localhost:4566"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 5
          --name localstack
          --hostname localstack

      postgres:
        image: postgres:latest
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: quickwit-dev
          POSTGRES_PASSWORD: quickwit-dev
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 3s
          --health-retries 5
          --name postgres
          --hostname postgres

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/git
            ~/.cargo/registry
            target
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-test-${{ hashFiles('Cargo.lock') }}
            ${{ runner.os }}-cargo-test
      - uses: actions-rs/cargo@v1
        name: cargo test
        with:
          command: test
        env:
          TEST_DATABASE_URL: postgres://quickwit-dev:quickwit-dev@postgres:5432/metastore
      # See #473 #472
      # - uses: actions-rs/cargo@v1
      #   name: cargo test failpoints
      #   with:
      #     command: test
      #     args: --features fail/failpoints test_failpoint -- --test-threads 1

  # test:
  #   name: Run tests
  #   runs-on: ubuntu-latest
  #   container: public.ecr.aws/l6o9a3f9/quickwit-builder:latest
  #   services:
  #     localstack:
  #       image: localstack/localstack:latest
  #       ports:
  #         - "4566:4566"
  #       env:
  #         SERVICES: s3
  #         HOSTNAME_EXTERNAL: localstack
  #   env:
  #     AWS_ACCESS_KEY_ID   : "placeholder"
  #     AWS_SECRET_ACCESS_KEY: "placeholder"
  #     AWS_DEFAULT_REGION  : "localhost"
  #   container:
  #       image: public.ecr.aws/l6o9a3f9/quickwit-builder:latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Create bucket in localstack
  #       run: /usr/local/bin/aws --endpoint-url=http://localstack:4566 s3 mb s3://quickwit-integration-tests
  #     - name: Run all tests.
  #       env:
  #         AWS_ACCESS_KEY_ID: dummy-access-key
  #         AWS_SECRET_ACCESS_KEY: dummy-secret-key
  #       run: cargo test --all-features
