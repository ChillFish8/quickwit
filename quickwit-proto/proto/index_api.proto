syntax = "proto3";

package index_api;

service IndexService {
  //
  // Calls required by an indexer to execute its IndexingPlan.
  //
  // Get an index.
  rpc get_index_metadata(GetIndexMetadataRequest) returns (GetIndexMetadataResponse);

  // Get all splits from index.
  rpc get_splits_metadatas(GetSplitsMetadatasRequest) returns (GetSplitsMetadatasResponse);

  // Stage split.
  rpc stage_split(StageSplitRequest) returns (SplitResponse);

  // Publish split.
  rpc publish_split(PublishSplitRequest) returns (SplitResponse);

  // Replace split.
  rpc replace_splits(ReplaceSplitsRequest) returns (SplitResponse);

  //
  // TODO: Not need right now but we can add create/delete index/source calls.
  //
}

message GetIndexMetadataRequest {
  repeated string index_id = 1;
}

message GetIndexMetadataResponse {
  string index_metadata_serialized_json = 1;
}

message GetSplitsMetadatasRequest {
  string index_id = 1;
  // TODO: add filter options
}

message GetSplitsMetadatasResponse {
  string splits_metadatas_serialized_json = 1;
}

message StageSplitRequest {
  string index_id = 1;
  string split_metadata_serialized_json = 2;
}

message PublishSplitRequest {
  string index_id = 1;
  string split_metadata_serialized_json = 2;
}

message ReplaceSplitsRequest {
  string index_id = 1;
  repeated string new_split_ids = 2;
  repeated string replaced_split_ids = 3;
}

message SplitResponse {
}
